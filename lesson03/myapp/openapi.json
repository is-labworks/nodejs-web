{
  "openapi": "3.0.0",
  "info": {
    "title": "Product and Transaction API",
    "version": "1.0.0",
    "description": "API for managing products and transactions"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Operations for managing products"
    },
    {
      "name": "Transactions",
      "description": "Operations for managing transactions"
    },
    {
      "name": "Transaction Analysis",
      "description": "Operations for analyzing transactions"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "List of all products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/products/{code}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a product by code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update a product",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/trans": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions",
        "responses": {
          "200": {
            "description": "List of all transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Create a new transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/trans/{tid}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get a transaction by ID",
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Update a transaction",
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete a transaction",
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/tx/find/{code}": {
      "get": {
        "tags": ["Transaction Analysis"],
        "summary": "Find transactions by product code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tx/summary/{code}": {
      "get": {
        "tags": ["Transaction Analysis"],
        "summary": "Get transaction summary by product code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionSummary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "required": ["code", "name", "price", "quantity"],
        "properties": {
          "code": {
            "type": "string",
            "pattern": "^P\\d{3}$",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "format": "float",
            "description": "Price of the product"
          },
          "quantity": {
            "type": "integer",
            "minimum": 0,
            "description": "Available quantity of the product"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "required": ["tid"],
        "properties": {
          "tid": {
            "type": "string",
            "pattern": "^TX\\d{5}$",
            "description": "Unique identifier for the transaction"
          },
          "pcode": {
            "type": "string",
            "pattern": "^P\\d{3}$",
            "description": "Unique identifier for the product"
          },
          "tamount": {
            "type": "integer",
            "minimum": 1,
            "description": "Amount of the transaction"
          },
          "ttime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the transaction"
          }
        }
      },
      "TransactionSummary": {
        "type": "object",
        "required": ["count", "total"],
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of transactions"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total amount of transactions"
          }
        }
      }
    }
  }
}
